openapi: 3.0.3
info:
  title: Discount REST API - OpenAPI 3.0
  description: |-
    Simple Discount API
  version: 1.0.0
servers:
  - url: http://localhost:8080/api/v1
tags:
  - name: discount
    description: Discount management and calculation
paths:
  /discounts:
    get:
      tags:
        - discount
      summary: Get existing discounts
      description: Get existing discounts
      operationId: getDiscounts
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Discount'
              example:
                - code: "PRES10OFF"
                  type: "ITEM_COST"
                  percent: 10
                  minCost: 100
                - code: "SHIRTS30OFF"
                  type: "ITEM_TYPE"
                  percent: 30
                  itemType: "CLOTHES"       
    post:
      tags:
        - discount
      summary: Create new discount
      description: Create new discount
      operationId: createDiscount
      requestBody:
        description: Discount details
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Discount'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Discount'          
        '400':
          description: Invalid discount supplied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'          
        '409':
          description: Discount already exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'          
  /discounts/findBestDiscountByItems:
    get:
      tags:
        - discount
      summary: Finds best discount for a given list of items
      description: Finds best discount for a given list of items
      operationId: findBestDiscountByItems
      parameters:
        - name: lineItems
          in: header
          description: items with counts, JSON schema '#/components/schemas/LineItems' 
          required: true
          schema:
            type: string
          example: "[{\"count\": 2, \"item\": {\"cost\": 20, \"id\": 1, \"type\": \"CLOTHES\"}},{\"count\": 3, \"item\": {\"cost\": 30, \"id\": 2, \"type\": \"CLOTHES\"}}]"
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BestDiscount'
        '400':
          description: Line items invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'          
  /discounts/{discountCode}:
    delete:
      tags:
        - discount
      summary: Deletes a discount
      description: delete a discount
      operationId: deleteDiscount
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: string
                example: "PRES20OFF"
components:
  schemas:
    Item:
      required:
        - id
        - type
        - cost
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        type:
          type: string
          example: "CLOTHES"
        cost:
          type: number
          format: double
          example: 10.99
    Discount:
      required:
        - code
        - type
        - percent
      type: object
      properties:
        code:
          type: string
          example: "PRES20OFF"
        type:
          type: string
          example: "ITEM_TYPE"
          enum:
            - ITEM_TYPE
            - ITEM_COUNT
            - ITEM_COST
        percent:
          type: integer
          format: int64
          example: 30
      discriminator:
        propertyName: type
    ITEM_TYPE:  ## type: "ITEM_TYPE" will be used as the discriminator value
      description: Discount by item type
      allOf:
      - $ref: '#/components/schemas/Discount'
      - type: object
        required:
          - itemType
        properties:
          itemType: 
            type: string
            example: "CLOTHES"
    ITEM_COUNT:  ## type: "ITEM_COUNT" will be used as the discriminator value
      description: Discount by item count
      allOf:
      - $ref: '#/components/schemas/Discount'
      - type: object
        required:
          - itemId
          - minCount
        properties:
          itemId: 
            type: integer
            format: int64
            example: 1
          minCount: 
            type: integer
            format: int64
            example: 2
    ITEM_COST:  ## type: "ITEM_COST" will be used as the discriminator value
      description: Discount by total cost
      allOf:
      - $ref: '#/components/schemas/Discount'
      - type: object
        required:
          - minCost
        properties:
          minCost: 
            type: number
            format: double
            example: 99.99
    DiscountArray:
      description: List of discount objects
      content:
        application/json:
          schema:
            type: array
            items:
              oneOf:
               - $ref: '#/components/schemas/ITEM_TYPE'
               - $ref: '#/components/schemas/ITEM_COST'
               - $ref: '#/components/schemas/ITEM_COUNT'
              discriminator:
                propertyName: type
    LineItems: 
      description: List of item objects with their counts
      content:
        application/json:
          schema:
            type: array
            items:
              type: object
              properties:
                item: 
                  $ref: '#/components/schemas/Item'
                count:
                  type: integer
                  format: int32
                  example: 2
    ApiErrorResponse:
      type: object
      properties:
        statusCode:
          type: integer
          format: int32
          example: 400
        timestamp:
          type: string
          format: date-time
          example: "2023-02-25T16:35:29.423+00:00"
        message:
          type: string
          example: "Required request header 'lineItems' for method parameter type String is not present"
        description:
          type: string
          example: "uri=/api/v1/discounts/findBestDiscountByItems"
    BestDiscount:
      type: object
      properties:
        discountCode:
          type: string
          example: "PRES20OFF"
        amount:
          type: number
          format: double
          example: 153.42
  requestBodies:
    Discount:
      description: Discount object
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Discount'
